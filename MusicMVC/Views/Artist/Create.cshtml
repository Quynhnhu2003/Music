@using MusicMVC.Enums
@model MusicMVC.ViewModels.ArtistViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var isCreate = Model == null || Model.Id == Guid.Empty;
    var actionString = isCreate ? "Create" : "Edit";
    var buttonString = isCreate ? "Create" : "Edit";
}

<h1>Create Artist</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="@actionString">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" class="form-control" />

            <div> @TempData["Message"] </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nickname" class="control-label"></label>
                <input asp-for="Nickname" class="form-control" />
                <span asp-validation-for="Nickname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Gender" class="control-label"></label>
                @*<input asp-for="Gender" class="form-control" /> *@
                <div>
                    @foreach (var gender in Enum.GetValues(typeof(GenderTypeEnum)))
                    {
                        bool checkValue = Model?.Gender == (GenderTypeEnum)gender ? true : false;
                        if(!checkValue)
                        {
                            <input type="radio" asp-for="Gender" class="btn-check" id="@gender" value="@((byte)gender)" required />
                        }
                        else
                        {
                            <input type="radio" asp-for="Gender" class="btn-check" id="@gender" checked value="@((byte)gender)" required />
                        }
                        <label asp-for="Gender" class="btn btn-outline-priamry" for="@gender">@gender</label>
                        <span> </span>
                    }
                </div>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label"></label>
                <input type="date" asp-for="DateOfBirth" class="form-control" />
                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
            </div>
            <div class="form-group" style="text-align: center; margin-top : 10px" >
                <input type="submit" value="@buttonString" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <div class="col-md-8">
        @await Component.InvokeAsync("ArtistList")
    </div>
</div>

<div>
    <a href="~/Home/Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
