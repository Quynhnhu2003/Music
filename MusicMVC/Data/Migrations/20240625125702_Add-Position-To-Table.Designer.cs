// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicMVC.Data;

#nullable disable

namespace MusicMVC.Data.Migrations
{
    [DbContext(typeof(MusicDbContext))]
    [Migration("20240625125702_Add-Position-To-Table")]
    partial class AddPositionToTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MusicMVC.Data.Entities.Artist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a275182-877d-4368-a135-156bea1b685b"),
                            Name = " Name Artist 1",
                            Position = 0
                        },
                        new
                        {
                            Id = new Guid("7e51cdda-b651-4081-b0df-b3ab3e4da734"),
                            Name = " Name Artist 2",
                            Position = 0
                        });
                });

            modelBuilder.Entity("MusicMVC.Data.Entities.Medium", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("MusicMVC.Data.Entities.Music", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Lyrics")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid?>("MediumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("MediumId");

                    b.ToTable("Musics");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6183f8a8-e514-41d7-84b0-ad70ae2991b9"),
                            ArtistId = new Guid("2a275182-877d-4368-a135-156bea1b685b"),
                            Lyrics = "",
                            Name = " Take me to your heart ",
                            Position = 0
                        },
                        new
                        {
                            Id = new Guid("a6d98c5d-8c5d-4370-b66f-17d2e492e563"),
                            ArtistId = new Guid("7e51cdda-b651-4081-b0df-b3ab3e4da734"),
                            Lyrics = "",
                            Name = " Hay Trao Cho Toi ",
                            Position = 0
                        });
                });

            modelBuilder.Entity("MusicMVC.Data.Entities.Music", b =>
                {
                    b.HasOne("MusicMVC.Data.Entities.Artist", "Artist")
                        .WithMany("Musics")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicMVC.Data.Entities.Medium", "Medium")
                        .WithMany("Musics")
                        .HasForeignKey("MediumId");

                    b.Navigation("Artist");

                    b.Navigation("Medium");
                });

            modelBuilder.Entity("MusicMVC.Data.Entities.Artist", b =>
                {
                    b.Navigation("Musics");
                });

            modelBuilder.Entity("MusicMVC.Data.Entities.Medium", b =>
                {
                    b.Navigation("Musics");
                });
#pragma warning restore 612, 618
        }
    }
}
